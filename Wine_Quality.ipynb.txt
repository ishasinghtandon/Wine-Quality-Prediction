{
  "cells": [
    {
      "cell_type": "code",
      "execution_count": 14,
      "metadata": {
        "id": "vnPMjThBoltI"
      },
      "outputs": [],
      "source": [
        "import numpy as np\n",
        "import pandas as pd\n",
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns\n",
        "%matplotlib inline"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 15,
      "metadata": {
        "id": "xEeAOiy-oltK"
      },
      "outputs": [],
      "source": [
        "labels = ('fixed_acidity','volatile_acidity','citric_acid','residual_sugar','chlorides','free_sulfur_dioxide','total_sulfur_dioxide','density','pH','sulphates','alcohol','quality')\n",
        "df_red = pd.read_csv('winequality-red.csv', header = 0, names = labels,sep = ';')\n",
        "df_white = pd.read_csv('winequality-white.csv', header = 0, names = labels,sep = ';')\n",
        "#importing Dataset Both Red and White Wine"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 16,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 427
        },
        "id": "_J63yLPxoltM",
        "outputId": "0e24753d-3d56-47ba-eed6-655f083bc6f5"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   fixed_acidity  volatile_acidity  citric_acid  residual_sugar  chlorides  \\\n",
              "0            7.4              0.70         0.00             1.9      0.076   \n",
              "1            7.8              0.88         0.00             2.6      0.098   \n",
              "2            7.8              0.76         0.04             2.3      0.092   \n",
              "3           11.2              0.28         0.56             1.9      0.075   \n",
              "4            7.4              0.70         0.00             1.9      0.076   \n",
              "5            7.4              0.66         0.00             1.8      0.075   \n",
              "6            7.9              0.60         0.06             1.6      0.069   \n",
              "7            7.3              0.65         0.00             1.2      0.065   \n",
              "8            7.8              0.58         0.02             2.0      0.073   \n",
              "9            7.5              0.50         0.36             6.1      0.071   \n",
              "\n",
              "   free_sulfur_dioxide  total_sulfur_dioxide  density    pH  sulphates  \\\n",
              "0                 11.0                  34.0   0.9978  3.51       0.56   \n",
              "1                 25.0                  67.0   0.9968  3.20       0.68   \n",
              "2                 15.0                  54.0   0.9970  3.26       0.65   \n",
              "3                 17.0                  60.0   0.9980  3.16       0.58   \n",
              "4                 11.0                  34.0   0.9978  3.51       0.56   \n",
              "5                 13.0                  40.0   0.9978  3.51       0.56   \n",
              "6                 15.0                  59.0   0.9964  3.30       0.46   \n",
              "7                 15.0                  21.0   0.9946  3.39       0.47   \n",
              "8                  9.0                  18.0   0.9968  3.36       0.57   \n",
              "9                 17.0                 102.0   0.9978  3.35       0.80   \n",
              "\n",
              "   alcohol  quality  \n",
              "0      9.4        5  \n",
              "1      9.8        5  \n",
              "2      9.8        5  \n",
              "3      9.8        6  \n",
              "4      9.4        5  \n",
              "5      9.4        5  \n",
              "6      9.4        5  \n",
              "7     10.0        7  \n",
              "8      9.5        7  \n",
              "9     10.5        5  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-837b3bd1-2500-4665-a80f-287ff11bcdd8\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>fixed_acidity</th>\n",
              "      <th>volatile_acidity</th>\n",
              "      <th>citric_acid</th>\n",
              "      <th>residual_sugar</th>\n",
              "      <th>chlorides</th>\n",
              "      <th>free_sulfur_dioxide</th>\n",
              "      <th>total_sulfur_dioxide</th>\n",
              "      <th>density</th>\n",
              "      <th>pH</th>\n",
              "      <th>sulphates</th>\n",
              "      <th>alcohol</th>\n",
              "      <th>quality</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>7.4</td>\n",
              "      <td>0.70</td>\n",
              "      <td>0.00</td>\n",
              "      <td>1.9</td>\n",
              "      <td>0.076</td>\n",
              "      <td>11.0</td>\n",
              "      <td>34.0</td>\n",
              "      <td>0.9978</td>\n",
              "      <td>3.51</td>\n",
              "      <td>0.56</td>\n",
              "      <td>9.4</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>7.8</td>\n",
              "      <td>0.88</td>\n",
              "      <td>0.00</td>\n",
              "      <td>2.6</td>\n",
              "      <td>0.098</td>\n",
              "      <td>25.0</td>\n",
              "      <td>67.0</td>\n",
              "      <td>0.9968</td>\n",
              "      <td>3.20</td>\n",
              "      <td>0.68</td>\n",
              "      <td>9.8</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>7.8</td>\n",
              "      <td>0.76</td>\n",
              "      <td>0.04</td>\n",
              "      <td>2.3</td>\n",
              "      <td>0.092</td>\n",
              "      <td>15.0</td>\n",
              "      <td>54.0</td>\n",
              "      <td>0.9970</td>\n",
              "      <td>3.26</td>\n",
              "      <td>0.65</td>\n",
              "      <td>9.8</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>11.2</td>\n",
              "      <td>0.28</td>\n",
              "      <td>0.56</td>\n",
              "      <td>1.9</td>\n",
              "      <td>0.075</td>\n",
              "      <td>17.0</td>\n",
              "      <td>60.0</td>\n",
              "      <td>0.9980</td>\n",
              "      <td>3.16</td>\n",
              "      <td>0.58</td>\n",
              "      <td>9.8</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>7.4</td>\n",
              "      <td>0.70</td>\n",
              "      <td>0.00</td>\n",
              "      <td>1.9</td>\n",
              "      <td>0.076</td>\n",
              "      <td>11.0</td>\n",
              "      <td>34.0</td>\n",
              "      <td>0.9978</td>\n",
              "      <td>3.51</td>\n",
              "      <td>0.56</td>\n",
              "      <td>9.4</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>7.4</td>\n",
              "      <td>0.66</td>\n",
              "      <td>0.00</td>\n",
              "      <td>1.8</td>\n",
              "      <td>0.075</td>\n",
              "      <td>13.0</td>\n",
              "      <td>40.0</td>\n",
              "      <td>0.9978</td>\n",
              "      <td>3.51</td>\n",
              "      <td>0.56</td>\n",
              "      <td>9.4</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>7.9</td>\n",
              "      <td>0.60</td>\n",
              "      <td>0.06</td>\n",
              "      <td>1.6</td>\n",
              "      <td>0.069</td>\n",
              "      <td>15.0</td>\n",
              "      <td>59.0</td>\n",
              "      <td>0.9964</td>\n",
              "      <td>3.30</td>\n",
              "      <td>0.46</td>\n",
              "      <td>9.4</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>7.3</td>\n",
              "      <td>0.65</td>\n",
              "      <td>0.00</td>\n",
              "      <td>1.2</td>\n",
              "      <td>0.065</td>\n",
              "      <td>15.0</td>\n",
              "      <td>21.0</td>\n",
              "      <td>0.9946</td>\n",
              "      <td>3.39</td>\n",
              "      <td>0.47</td>\n",
              "      <td>10.0</td>\n",
              "      <td>7</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>7.8</td>\n",
              "      <td>0.58</td>\n",
              "      <td>0.02</td>\n",
              "      <td>2.0</td>\n",
              "      <td>0.073</td>\n",
              "      <td>9.0</td>\n",
              "      <td>18.0</td>\n",
              "      <td>0.9968</td>\n",
              "      <td>3.36</td>\n",
              "      <td>0.57</td>\n",
              "      <td>9.5</td>\n",
              "      <td>7</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>7.5</td>\n",
              "      <td>0.50</td>\n",
              "      <td>0.36</td>\n",
              "      <td>6.1</td>\n",
              "      <td>0.071</td>\n",
              "      <td>17.0</td>\n",
              "      <td>102.0</td>\n",
              "      <td>0.9978</td>\n",
              "      <td>3.35</td>\n",
              "      <td>0.80</td>\n",
              "      <td>10.5</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-837b3bd1-2500-4665-a80f-287ff11bcdd8')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-837b3bd1-2500-4665-a80f-287ff11bcdd8 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-837b3bd1-2500-4665-a80f-287ff11bcdd8');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 16
        }
      ],
      "source": [
        "#Display the first 10 data tuples\n",
        "df_red.head(10)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 17,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 427
        },
        "id": "FzqTc5MRoltN",
        "outputId": "1ca791ec-a9ae-47a6-b95e-e3735b7559d2"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   fixed_acidity  volatile_acidity  citric_acid  residual_sugar  chlorides  \\\n",
              "0            7.0              0.27         0.36            20.7      0.045   \n",
              "1            6.3              0.30         0.34             1.6      0.049   \n",
              "2            8.1              0.28         0.40             6.9      0.050   \n",
              "3            7.2              0.23         0.32             8.5      0.058   \n",
              "4            7.2              0.23         0.32             8.5      0.058   \n",
              "5            8.1              0.28         0.40             6.9      0.050   \n",
              "6            6.2              0.32         0.16             7.0      0.045   \n",
              "7            7.0              0.27         0.36            20.7      0.045   \n",
              "8            6.3              0.30         0.34             1.6      0.049   \n",
              "9            8.1              0.22         0.43             1.5      0.044   \n",
              "\n",
              "   free_sulfur_dioxide  total_sulfur_dioxide  density    pH  sulphates  \\\n",
              "0                 45.0                 170.0   1.0010  3.00       0.45   \n",
              "1                 14.0                 132.0   0.9940  3.30       0.49   \n",
              "2                 30.0                  97.0   0.9951  3.26       0.44   \n",
              "3                 47.0                 186.0   0.9956  3.19       0.40   \n",
              "4                 47.0                 186.0   0.9956  3.19       0.40   \n",
              "5                 30.0                  97.0   0.9951  3.26       0.44   \n",
              "6                 30.0                 136.0   0.9949  3.18       0.47   \n",
              "7                 45.0                 170.0   1.0010  3.00       0.45   \n",
              "8                 14.0                 132.0   0.9940  3.30       0.49   \n",
              "9                 28.0                 129.0   0.9938  3.22       0.45   \n",
              "\n",
              "   alcohol  quality  \n",
              "0      8.8        6  \n",
              "1      9.5        6  \n",
              "2     10.1        6  \n",
              "3      9.9        6  \n",
              "4      9.9        6  \n",
              "5     10.1        6  \n",
              "6      9.6        6  \n",
              "7      8.8        6  \n",
              "8      9.5        6  \n",
              "9     11.0        6  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-41860cf7-e7b7-4f0a-837e-ddcc25cac6c8\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>fixed_acidity</th>\n",
              "      <th>volatile_acidity</th>\n",
              "      <th>citric_acid</th>\n",
              "      <th>residual_sugar</th>\n",
              "      <th>chlorides</th>\n",
              "      <th>free_sulfur_dioxide</th>\n",
              "      <th>total_sulfur_dioxide</th>\n",
              "      <th>density</th>\n",
              "      <th>pH</th>\n",
              "      <th>sulphates</th>\n",
              "      <th>alcohol</th>\n",
              "      <th>quality</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>7.0</td>\n",
              "      <td>0.27</td>\n",
              "      <td>0.36</td>\n",
              "      <td>20.7</td>\n",
              "      <td>0.045</td>\n",
              "      <td>45.0</td>\n",
              "      <td>170.0</td>\n",
              "      <td>1.0010</td>\n",
              "      <td>3.00</td>\n",
              "      <td>0.45</td>\n",
              "      <td>8.8</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>6.3</td>\n",
              "      <td>0.30</td>\n",
              "      <td>0.34</td>\n",
              "      <td>1.6</td>\n",
              "      <td>0.049</td>\n",
              "      <td>14.0</td>\n",
              "      <td>132.0</td>\n",
              "      <td>0.9940</td>\n",
              "      <td>3.30</td>\n",
              "      <td>0.49</td>\n",
              "      <td>9.5</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>8.1</td>\n",
              "      <td>0.28</td>\n",
              "      <td>0.40</td>\n",
              "      <td>6.9</td>\n",
              "      <td>0.050</td>\n",
              "      <td>30.0</td>\n",
              "      <td>97.0</td>\n",
              "      <td>0.9951</td>\n",
              "      <td>3.26</td>\n",
              "      <td>0.44</td>\n",
              "      <td>10.1</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>7.2</td>\n",
              "      <td>0.23</td>\n",
              "      <td>0.32</td>\n",
              "      <td>8.5</td>\n",
              "      <td>0.058</td>\n",
              "      <td>47.0</td>\n",
              "      <td>186.0</td>\n",
              "      <td>0.9956</td>\n",
              "      <td>3.19</td>\n",
              "      <td>0.40</td>\n",
              "      <td>9.9</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>7.2</td>\n",
              "      <td>0.23</td>\n",
              "      <td>0.32</td>\n",
              "      <td>8.5</td>\n",
              "      <td>0.058</td>\n",
              "      <td>47.0</td>\n",
              "      <td>186.0</td>\n",
              "      <td>0.9956</td>\n",
              "      <td>3.19</td>\n",
              "      <td>0.40</td>\n",
              "      <td>9.9</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>8.1</td>\n",
              "      <td>0.28</td>\n",
              "      <td>0.40</td>\n",
              "      <td>6.9</td>\n",
              "      <td>0.050</td>\n",
              "      <td>30.0</td>\n",
              "      <td>97.0</td>\n",
              "      <td>0.9951</td>\n",
              "      <td>3.26</td>\n",
              "      <td>0.44</td>\n",
              "      <td>10.1</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>6.2</td>\n",
              "      <td>0.32</td>\n",
              "      <td>0.16</td>\n",
              "      <td>7.0</td>\n",
              "      <td>0.045</td>\n",
              "      <td>30.0</td>\n",
              "      <td>136.0</td>\n",
              "      <td>0.9949</td>\n",
              "      <td>3.18</td>\n",
              "      <td>0.47</td>\n",
              "      <td>9.6</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>7.0</td>\n",
              "      <td>0.27</td>\n",
              "      <td>0.36</td>\n",
              "      <td>20.7</td>\n",
              "      <td>0.045</td>\n",
              "      <td>45.0</td>\n",
              "      <td>170.0</td>\n",
              "      <td>1.0010</td>\n",
              "      <td>3.00</td>\n",
              "      <td>0.45</td>\n",
              "      <td>8.8</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>6.3</td>\n",
              "      <td>0.30</td>\n",
              "      <td>0.34</td>\n",
              "      <td>1.6</td>\n",
              "      <td>0.049</td>\n",
              "      <td>14.0</td>\n",
              "      <td>132.0</td>\n",
              "      <td>0.9940</td>\n",
              "      <td>3.30</td>\n",
              "      <td>0.49</td>\n",
              "      <td>9.5</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>8.1</td>\n",
              "      <td>0.22</td>\n",
              "      <td>0.43</td>\n",
              "      <td>1.5</td>\n",
              "      <td>0.044</td>\n",
              "      <td>28.0</td>\n",
              "      <td>129.0</td>\n",
              "      <td>0.9938</td>\n",
              "      <td>3.22</td>\n",
              "      <td>0.45</td>\n",
              "      <td>11.0</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-41860cf7-e7b7-4f0a-837e-ddcc25cac6c8')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-41860cf7-e7b7-4f0a-837e-ddcc25cac6c8 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-41860cf7-e7b7-4f0a-837e-ddcc25cac6c8');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 17
        }
      ],
      "source": [
        "df_white.head(10)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 18,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "KF4RDrD9oltO",
        "outputId": "0c83c13a-8098-4eec-ec13-44329cddf10b"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 1599 entries, 0 to 1598\n",
            "Data columns (total 12 columns):\n",
            " #   Column                Non-Null Count  Dtype  \n",
            "---  ------                --------------  -----  \n",
            " 0   fixed_acidity         1599 non-null   float64\n",
            " 1   volatile_acidity      1599 non-null   float64\n",
            " 2   citric_acid           1599 non-null   float64\n",
            " 3   residual_sugar        1599 non-null   float64\n",
            " 4   chlorides             1599 non-null   float64\n",
            " 5   free_sulfur_dioxide   1599 non-null   float64\n",
            " 6   total_sulfur_dioxide  1599 non-null   float64\n",
            " 7   density               1599 non-null   float64\n",
            " 8   pH                    1599 non-null   float64\n",
            " 9   sulphates             1599 non-null   float64\n",
            " 10  alcohol               1599 non-null   float64\n",
            " 11  quality               1599 non-null   int64  \n",
            "dtypes: float64(11), int64(1)\n",
            "memory usage: 150.0 KB\n"
          ]
        }
      ],
      "source": [
        "#Information abot Dataset\n",
        "df_red.info()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 19,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "4bOLrbcQoltP",
        "outputId": "f50cd958-3384-42e7-a5ea-d394b9da12ce"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 4898 entries, 0 to 4897\n",
            "Data columns (total 12 columns):\n",
            " #   Column                Non-Null Count  Dtype  \n",
            "---  ------                --------------  -----  \n",
            " 0   fixed_acidity         4898 non-null   float64\n",
            " 1   volatile_acidity      4898 non-null   float64\n",
            " 2   citric_acid           4898 non-null   float64\n",
            " 3   residual_sugar        4898 non-null   float64\n",
            " 4   chlorides             4898 non-null   float64\n",
            " 5   free_sulfur_dioxide   4898 non-null   float64\n",
            " 6   total_sulfur_dioxide  4898 non-null   float64\n",
            " 7   density               4898 non-null   float64\n",
            " 8   pH                    4898 non-null   float64\n",
            " 9   sulphates             4898 non-null   float64\n",
            " 10  alcohol               4898 non-null   float64\n",
            " 11  quality               4898 non-null   int64  \n",
            "dtypes: float64(11), int64(1)\n",
            "memory usage: 459.3 KB\n"
          ]
        }
      ],
      "source": [
        "df_white.info()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 20,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "hI_kKq0holtQ",
        "outputId": "621abd6b-a616-4b84-a812-3e3e509f4584"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(1599, 12)"
            ]
          },
          "metadata": {},
          "execution_count": 20
        }
      ],
      "source": [
        "#Shape of the Data\n",
        "df_red.shape"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 21,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "4XMhDC0foltQ",
        "outputId": "602f9d74-4fd3-448b-f15a-81c4644a9d9c"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(4898, 12)"
            ]
          },
          "metadata": {},
          "execution_count": 21
        }
      ],
      "source": [
        "df_white.shape"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 22,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "yg0RXTFyoltR",
        "outputId": "d31a8567-c22b-42a7-ca15-39ccd8ed4c1d"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Red Wine:-\n",
            "Total Duplicate Values (Before Drop): 240\n",
            "Total Duplicate Values (After Drop): 0\n"
          ]
        }
      ],
      "source": [
        "#Removing/Dropping the Duplicate Values\n",
        "print('Red Wine:-')\n",
        "print('Total Duplicate Values (Before Drop):',sum(df_red.duplicated()))\n",
        "\n",
        "df_red.drop_duplicates(inplace = True)\n",
        "print('Total Duplicate Values (After Drop):',sum(df_red.duplicated()))"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 23,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "GqORbbB1oltS",
        "outputId": "76586ba4-7dab-4b45-99ee-62e7af2bf0d0"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "White Wine:-\n",
            "Total Duplicate Values (Before Drop): 937\n",
            "Total Duplicate Values (After Drop): 0\n"
          ]
        }
      ],
      "source": [
        "print('White Wine:-')\n",
        "print('Total Duplicate Values (Before Drop):',sum(df_white.duplicated()))\n",
        "\n",
        "df_white.drop_duplicates(inplace = True)\n",
        "print('Total Duplicate Values (After Drop):',sum(df_white.duplicated()))"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 24,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "XM3S216zoltT",
        "outputId": "57f77744-aa03-43e0-905a-0841cc0ed276"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(1359, 12)"
            ]
          },
          "metadata": {},
          "execution_count": 24
        }
      ],
      "source": [
        "#New Shape after Dropping\n",
        "df_red.shape"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 25,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "AJPAQwCkoltT",
        "outputId": "5d4f3554-74dc-44f7-c279-70f2518119a0"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(3961, 12)"
            ]
          },
          "metadata": {},
          "execution_count": 25
        }
      ],
      "source": [
        "df_white.shape"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 26,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "aFzhYDKholtT",
        "outputId": "8b3739b8-24a5-4251-dfa2-163bb33a9b4a"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "fixed_acidity            96\n",
              "volatile_acidity        143\n",
              "citric_acid              80\n",
              "residual_sugar           91\n",
              "chlorides               153\n",
              "free_sulfur_dioxide      60\n",
              "total_sulfur_dioxide    144\n",
              "density                 436\n",
              "pH                       89\n",
              "sulphates                96\n",
              "alcohol                  65\n",
              "quality                   6\n",
              "dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 26
        }
      ],
      "source": [
        "#Checking for the unique values\n",
        "df_red.nunique()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 27,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "SUA5aRxPoltU",
        "outputId": "b43362fb-1a10-43d9-de22-32cfb971b26c"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "fixed_acidity            68\n",
              "volatile_acidity        125\n",
              "citric_acid              87\n",
              "residual_sugar          310\n",
              "chlorides               160\n",
              "free_sulfur_dioxide     132\n",
              "total_sulfur_dioxide    251\n",
              "density                 890\n",
              "pH                      103\n",
              "sulphates                79\n",
              "alcohol                 103\n",
              "quality                   7\n",
              "dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 27
        }
      ],
      "source": [
        "df_white.nunique()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 28,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 364
        },
        "id": "r65X9HgwoltV",
        "outputId": "c1c1a8bb-881d-455a-fef1-796e8cf12571"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "       fixed_acidity  volatile_acidity  citric_acid  residual_sugar  \\\n",
              "count    1359.000000       1359.000000  1359.000000     1359.000000   \n",
              "mean        8.310596          0.529478     0.272333        2.523400   \n",
              "std         1.736990          0.183031     0.195537        1.352314   \n",
              "min         4.600000          0.120000     0.000000        0.900000   \n",
              "25%         7.100000          0.390000     0.090000        1.900000   \n",
              "50%         7.900000          0.520000     0.260000        2.200000   \n",
              "75%         9.200000          0.640000     0.430000        2.600000   \n",
              "max        15.900000          1.580000     1.000000       15.500000   \n",
              "\n",
              "         chlorides  free_sulfur_dioxide  total_sulfur_dioxide      density  \\\n",
              "count  1359.000000          1359.000000           1359.000000  1359.000000   \n",
              "mean      0.088124            15.893304             46.825975     0.996709   \n",
              "std       0.049377            10.447270             33.408946     0.001869   \n",
              "min       0.012000             1.000000              6.000000     0.990070   \n",
              "25%       0.070000             7.000000             22.000000     0.995600   \n",
              "50%       0.079000            14.000000             38.000000     0.996700   \n",
              "75%       0.091000            21.000000             63.000000     0.997820   \n",
              "max       0.611000            72.000000            289.000000     1.003690   \n",
              "\n",
              "                pH    sulphates      alcohol      quality  \n",
              "count  1359.000000  1359.000000  1359.000000  1359.000000  \n",
              "mean      3.309787     0.658705    10.432315     5.623252  \n",
              "std       0.155036     0.170667     1.082065     0.823578  \n",
              "min       2.740000     0.330000     8.400000     3.000000  \n",
              "25%       3.210000     0.550000     9.500000     5.000000  \n",
              "50%       3.310000     0.620000    10.200000     6.000000  \n",
              "75%       3.400000     0.730000    11.100000     6.000000  \n",
              "max       4.010000     2.000000    14.900000     8.000000  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-07f9e400-ca10-4775-afb8-2f601cfc2e85\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>fixed_acidity</th>\n",
              "      <th>volatile_acidity</th>\n",
              "      <th>citric_acid</th>\n",
              "      <th>residual_sugar</th>\n",
              "      <th>chlorides</th>\n",
              "      <th>free_sulfur_dioxide</th>\n",
              "      <th>total_sulfur_dioxide</th>\n",
              "      <th>density</th>\n",
              "      <th>pH</th>\n",
              "      <th>sulphates</th>\n",
              "      <th>alcohol</th>\n",
              "      <th>quality</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>1359.000000</td>\n",
              "      <td>1359.000000</td>\n",
              "      <td>1359.000000</td>\n",
              "      <td>1359.000000</td>\n",
              "      <td>1359.000000</td>\n",
              "      <td>1359.000000</td>\n",
              "      <td>1359.000000</td>\n",
              "      <td>1359.000000</td>\n",
              "      <td>1359.000000</td>\n",
              "      <td>1359.000000</td>\n",
              "      <td>1359.000000</td>\n",
              "      <td>1359.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>8.310596</td>\n",
              "      <td>0.529478</td>\n",
              "      <td>0.272333</td>\n",
              "      <td>2.523400</td>\n",
              "      <td>0.088124</td>\n",
              "      <td>15.893304</td>\n",
              "      <td>46.825975</td>\n",
              "      <td>0.996709</td>\n",
              "      <td>3.309787</td>\n",
              "      <td>0.658705</td>\n",
              "      <td>10.432315</td>\n",
              "      <td>5.623252</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>1.736990</td>\n",
              "      <td>0.183031</td>\n",
              "      <td>0.195537</td>\n",
              "      <td>1.352314</td>\n",
              "      <td>0.049377</td>\n",
              "      <td>10.447270</td>\n",
              "      <td>33.408946</td>\n",
              "      <td>0.001869</td>\n",
              "      <td>0.155036</td>\n",
              "      <td>0.170667</td>\n",
              "      <td>1.082065</td>\n",
              "      <td>0.823578</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>4.600000</td>\n",
              "      <td>0.120000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.900000</td>\n",
              "      <td>0.012000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>6.000000</td>\n",
              "      <td>0.990070</td>\n",
              "      <td>2.740000</td>\n",
              "      <td>0.330000</td>\n",
              "      <td>8.400000</td>\n",
              "      <td>3.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>7.100000</td>\n",
              "      <td>0.390000</td>\n",
              "      <td>0.090000</td>\n",
              "      <td>1.900000</td>\n",
              "      <td>0.070000</td>\n",
              "      <td>7.000000</td>\n",
              "      <td>22.000000</td>\n",
              "      <td>0.995600</td>\n",
              "      <td>3.210000</td>\n",
              "      <td>0.550000</td>\n",
              "      <td>9.500000</td>\n",
              "      <td>5.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>7.900000</td>\n",
              "      <td>0.520000</td>\n",
              "      <td>0.260000</td>\n",
              "      <td>2.200000</td>\n",
              "      <td>0.079000</td>\n",
              "      <td>14.000000</td>\n",
              "      <td>38.000000</td>\n",
              "      <td>0.996700</td>\n",
              "      <td>3.310000</td>\n",
              "      <td>0.620000</td>\n",
              "      <td>10.200000</td>\n",
              "      <td>6.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>9.200000</td>\n",
              "      <td>0.640000</td>\n",
              "      <td>0.430000</td>\n",
              "      <td>2.600000</td>\n",
              "      <td>0.091000</td>\n",
              "      <td>21.000000</td>\n",
              "      <td>63.000000</td>\n",
              "      <td>0.997820</td>\n",
              "      <td>3.400000</td>\n",
              "      <td>0.730000</td>\n",
              "      <td>11.100000</td>\n",
              "      <td>6.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>15.900000</td>\n",
              "      <td>1.580000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>15.500000</td>\n",
              "      <td>0.611000</td>\n",
              "      <td>72.000000</td>\n",
              "      <td>289.000000</td>\n",
              "      <td>1.003690</td>\n",
              "      <td>4.010000</td>\n",
              "      <td>2.000000</td>\n",
              "      <td>14.900000</td>\n",
              "      <td>8.000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-07f9e400-ca10-4775-afb8-2f601cfc2e85')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-07f9e400-ca10-4775-afb8-2f601cfc2e85 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-07f9e400-ca10-4775-afb8-2f601cfc2e85');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 28
        }
      ],
      "source": [
        "#Description of the Dataset\n",
        "df_red.describe()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 29,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 364
        },
        "id": "JcxJt8LZoltV",
        "outputId": "a9cc8ef0-f4c0-4566-f87a-87d983fd90cb"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "       fixed_acidity  volatile_acidity  citric_acid  residual_sugar  \\\n",
              "count    3961.000000       3961.000000  3961.000000     3961.000000   \n",
              "mean        6.839346          0.280538     0.334332        5.914819   \n",
              "std         0.866860          0.103437     0.122446        4.861646   \n",
              "min         3.800000          0.080000     0.000000        0.600000   \n",
              "25%         6.300000          0.210000     0.270000        1.600000   \n",
              "50%         6.800000          0.260000     0.320000        4.700000   \n",
              "75%         7.300000          0.330000     0.390000        8.900000   \n",
              "max        14.200000          1.100000     1.660000       65.800000   \n",
              "\n",
              "         chlorides  free_sulfur_dioxide  total_sulfur_dioxide      density  \\\n",
              "count  3961.000000          3961.000000           3961.000000  3961.000000   \n",
              "mean      0.045905            34.889169            137.193512     0.993790   \n",
              "std       0.023103            17.210021             43.129065     0.002905   \n",
              "min       0.009000             2.000000              9.000000     0.987110   \n",
              "25%       0.035000            23.000000            106.000000     0.991620   \n",
              "50%       0.042000            33.000000            133.000000     0.993500   \n",
              "75%       0.050000            45.000000            166.000000     0.995710   \n",
              "max       0.346000           289.000000            440.000000     1.038980   \n",
              "\n",
              "                pH    sulphates      alcohol      quality  \n",
              "count  3961.000000  3961.000000  3961.000000  3961.000000  \n",
              "mean      3.195458     0.490351    10.589358     5.854835  \n",
              "std       0.151546     0.113523     1.217076     0.890683  \n",
              "min       2.720000     0.220000     8.000000     3.000000  \n",
              "25%       3.090000     0.410000     9.500000     5.000000  \n",
              "50%       3.180000     0.480000    10.400000     6.000000  \n",
              "75%       3.290000     0.550000    11.400000     6.000000  \n",
              "max       3.820000     1.080000    14.200000     9.000000  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-6c85d7d6-140f-4639-bff3-e87424be37d6\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>fixed_acidity</th>\n",
              "      <th>volatile_acidity</th>\n",
              "      <th>citric_acid</th>\n",
              "      <th>residual_sugar</th>\n",
              "      <th>chlorides</th>\n",
              "      <th>free_sulfur_dioxide</th>\n",
              "      <th>total_sulfur_dioxide</th>\n",
              "      <th>density</th>\n",
              "      <th>pH</th>\n",
              "      <th>sulphates</th>\n",
              "      <th>alcohol</th>\n",
              "      <th>quality</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>3961.000000</td>\n",
              "      <td>3961.000000</td>\n",
              "      <td>3961.000000</td>\n",
              "      <td>3961.000000</td>\n",
              "      <td>3961.000000</td>\n",
              "      <td>3961.000000</td>\n",
              "      <td>3961.000000</td>\n",
              "      <td>3961.000000</td>\n",
              "      <td>3961.000000</td>\n",
              "      <td>3961.000000</td>\n",
              "      <td>3961.000000</td>\n",
              "      <td>3961.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>6.839346</td>\n",
              "      <td>0.280538</td>\n",
              "      <td>0.334332</td>\n",
              "      <td>5.914819</td>\n",
              "      <td>0.045905</td>\n",
              "      <td>34.889169</td>\n",
              "      <td>137.193512</td>\n",
              "      <td>0.993790</td>\n",
              "      <td>3.195458</td>\n",
              "      <td>0.490351</td>\n",
              "      <td>10.589358</td>\n",
              "      <td>5.854835</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>0.866860</td>\n",
              "      <td>0.103437</td>\n",
              "      <td>0.122446</td>\n",
              "      <td>4.861646</td>\n",
              "      <td>0.023103</td>\n",
              "      <td>17.210021</td>\n",
              "      <td>43.129065</td>\n",
              "      <td>0.002905</td>\n",
              "      <td>0.151546</td>\n",
              "      <td>0.113523</td>\n",
              "      <td>1.217076</td>\n",
              "      <td>0.890683</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>3.800000</td>\n",
              "      <td>0.080000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.600000</td>\n",
              "      <td>0.009000</td>\n",
              "      <td>2.000000</td>\n",
              "      <td>9.000000</td>\n",
              "      <td>0.987110</td>\n",
              "      <td>2.720000</td>\n",
              "      <td>0.220000</td>\n",
              "      <td>8.000000</td>\n",
              "      <td>3.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>6.300000</td>\n",
              "      <td>0.210000</td>\n",
              "      <td>0.270000</td>\n",
              "      <td>1.600000</td>\n",
              "      <td>0.035000</td>\n",
              "      <td>23.000000</td>\n",
              "      <td>106.000000</td>\n",
              "      <td>0.991620</td>\n",
              "      <td>3.090000</td>\n",
              "      <td>0.410000</td>\n",
              "      <td>9.500000</td>\n",
              "      <td>5.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>6.800000</td>\n",
              "      <td>0.260000</td>\n",
              "      <td>0.320000</td>\n",
              "      <td>4.700000</td>\n",
              "      <td>0.042000</td>\n",
              "      <td>33.000000</td>\n",
              "      <td>133.000000</td>\n",
              "      <td>0.993500</td>\n",
              "      <td>3.180000</td>\n",
              "      <td>0.480000</td>\n",
              "      <td>10.400000</td>\n",
              "      <td>6.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>7.300000</td>\n",
              "      <td>0.330000</td>\n",
              "      <td>0.390000</td>\n",
              "      <td>8.900000</td>\n",
              "      <td>0.050000</td>\n",
              "      <td>45.000000</td>\n",
              "      <td>166.000000</td>\n",
              "      <td>0.995710</td>\n",
              "      <td>3.290000</td>\n",
              "      <td>0.550000</td>\n",
              "      <td>11.400000</td>\n",
              "      <td>6.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>14.200000</td>\n",
              "      <td>1.100000</td>\n",
              "      <td>1.660000</td>\n",
              "      <td>65.800000</td>\n",
              "      <td>0.346000</td>\n",
              "      <td>289.000000</td>\n",
              "      <td>440.000000</td>\n",
              "      <td>1.038980</td>\n",
              "      <td>3.820000</td>\n",
              "      <td>1.080000</td>\n",
              "      <td>14.200000</td>\n",
              "      <td>9.000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6c85d7d6-140f-4639-bff3-e87424be37d6')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-6c85d7d6-140f-4639-bff3-e87424be37d6 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-6c85d7d6-140f-4639-bff3-e87424be37d6');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 29
        }
      ],
      "source": [
        "df_white.describe()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 30,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 270
        },
        "id": "jSnylASsoltV",
        "outputId": "4a35f36c-be50-4e81-822b-3cc0d4f9cfb1"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   fixed_acidity  volatile_acidity  citric_acid  residual_sugar  chlorides  \\\n",
              "0            7.4              0.70         0.00             1.9      0.076   \n",
              "1            7.8              0.88         0.00             2.6      0.098   \n",
              "2            7.8              0.76         0.04             2.3      0.092   \n",
              "3           11.2              0.28         0.56             1.9      0.075   \n",
              "5            7.4              0.66         0.00             1.8      0.075   \n",
              "\n",
              "   free_sulfur_dioxide  total_sulfur_dioxide  density    pH  sulphates  \\\n",
              "0                 11.0                  34.0   0.9978  3.51       0.56   \n",
              "1                 25.0                  67.0   0.9968  3.20       0.68   \n",
              "2                 15.0                  54.0   0.9970  3.26       0.65   \n",
              "3                 17.0                  60.0   0.9980  3.16       0.58   \n",
              "5                 13.0                  40.0   0.9978  3.51       0.56   \n",
              "\n",
              "   alcohol  quality color  \n",
              "0      9.4        5   red  \n",
              "1      9.8        5   red  \n",
              "2      9.8        5   red  \n",
              "3      9.8        6   red  \n",
              "5      9.4        5   red  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-f2956c1d-c149-4300-b7e1-5fac8b30fe31\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>fixed_acidity</th>\n",
              "      <th>volatile_acidity</th>\n",
              "      <th>citric_acid</th>\n",
              "      <th>residual_sugar</th>\n",
              "      <th>chlorides</th>\n",
              "      <th>free_sulfur_dioxide</th>\n",
              "      <th>total_sulfur_dioxide</th>\n",
              "      <th>density</th>\n",
              "      <th>pH</th>\n",
              "      <th>sulphates</th>\n",
              "      <th>alcohol</th>\n",
              "      <th>quality</th>\n",
              "      <th>color</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>7.4</td>\n",
              "      <td>0.70</td>\n",
              "      <td>0.00</td>\n",
              "      <td>1.9</td>\n",
              "      <td>0.076</td>\n",
              "      <td>11.0</td>\n",
              "      <td>34.0</td>\n",
              "      <td>0.9978</td>\n",
              "      <td>3.51</td>\n",
              "      <td>0.56</td>\n",
              "      <td>9.4</td>\n",
              "      <td>5</td>\n",
              "      <td>red</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>7.8</td>\n",
              "      <td>0.88</td>\n",
              "      <td>0.00</td>\n",
              "      <td>2.6</td>\n",
              "      <td>0.098</td>\n",
              "      <td>25.0</td>\n",
              "      <td>67.0</td>\n",
              "      <td>0.9968</td>\n",
              "      <td>3.20</td>\n",
              "      <td>0.68</td>\n",
              "      <td>9.8</td>\n",
              "      <td>5</td>\n",
              "      <td>red</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>7.8</td>\n",
              "      <td>0.76</td>\n",
              "      <td>0.04</td>\n",
              "      <td>2.3</td>\n",
              "      <td>0.092</td>\n",
              "      <td>15.0</td>\n",
              "      <td>54.0</td>\n",
              "      <td>0.9970</td>\n",
              "      <td>3.26</td>\n",
              "      <td>0.65</td>\n",
              "      <td>9.8</td>\n",
              "      <td>5</td>\n",
              "      <td>red</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>11.2</td>\n",
              "      <td>0.28</td>\n",
              "      <td>0.56</td>\n",
              "      <td>1.9</td>\n",
              "      <td>0.075</td>\n",
              "      <td>17.0</td>\n",
              "      <td>60.0</td>\n",
              "      <td>0.9980</td>\n",
              "      <td>3.16</td>\n",
              "      <td>0.58</td>\n",
              "      <td>9.8</td>\n",
              "      <td>6</td>\n",
              "      <td>red</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>7.4</td>\n",
              "      <td>0.66</td>\n",
              "      <td>0.00</td>\n",
              "      <td>1.8</td>\n",
              "      <td>0.075</td>\n",
              "      <td>13.0</td>\n",
              "      <td>40.0</td>\n",
              "      <td>0.9978</td>\n",
              "      <td>3.51</td>\n",
              "      <td>0.56</td>\n",
              "      <td>9.4</td>\n",
              "      <td>5</td>\n",
              "      <td>red</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f2956c1d-c149-4300-b7e1-5fac8b30fe31')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-f2956c1d-c149-4300-b7e1-5fac8b30fe31 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-f2956c1d-c149-4300-b7e1-5fac8b30fe31');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 30
        }
      ],
      "source": [
        "#Appending the Color to each dataframe & displaying the Edited dataset\n",
        "df_red['color'] = 'red'\n",
        "df_red.head()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 31,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 270
        },
        "id": "bTzpJmdvoltW",
        "outputId": "090011ef-2ae4-418d-d8e7-6ae9e80a8c67"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   fixed_acidity  volatile_acidity  citric_acid  residual_sugar  chlorides  \\\n",
              "0            7.0              0.27         0.36            20.7      0.045   \n",
              "1            6.3              0.30         0.34             1.6      0.049   \n",
              "2            8.1              0.28         0.40             6.9      0.050   \n",
              "3            7.2              0.23         0.32             8.5      0.058   \n",
              "6            6.2              0.32         0.16             7.0      0.045   \n",
              "\n",
              "   free_sulfur_dioxide  total_sulfur_dioxide  density    pH  sulphates  \\\n",
              "0                 45.0                 170.0   1.0010  3.00       0.45   \n",
              "1                 14.0                 132.0   0.9940  3.30       0.49   \n",
              "2                 30.0                  97.0   0.9951  3.26       0.44   \n",
              "3                 47.0                 186.0   0.9956  3.19       0.40   \n",
              "6                 30.0                 136.0   0.9949  3.18       0.47   \n",
              "\n",
              "   alcohol  quality  color  \n",
              "0      8.8        6  white  \n",
              "1      9.5        6  white  \n",
              "2     10.1        6  white  \n",
              "3      9.9        6  white  \n",
              "6      9.6        6  white  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-98ccc573-a2a4-4743-8a7a-f19131a2f5a0\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>fixed_acidity</th>\n",
              "      <th>volatile_acidity</th>\n",
              "      <th>citric_acid</th>\n",
              "      <th>residual_sugar</th>\n",
              "      <th>chlorides</th>\n",
              "      <th>free_sulfur_dioxide</th>\n",
              "      <th>total_sulfur_dioxide</th>\n",
              "      <th>density</th>\n",
              "      <th>pH</th>\n",
              "      <th>sulphates</th>\n",
              "      <th>alcohol</th>\n",
              "      <th>quality</th>\n",
              "      <th>color</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>7.0</td>\n",
              "      <td>0.27</td>\n",
              "      <td>0.36</td>\n",
              "      <td>20.7</td>\n",
              "      <td>0.045</td>\n",
              "      <td>45.0</td>\n",
              "      <td>170.0</td>\n",
              "      <td>1.0010</td>\n",
              "      <td>3.00</td>\n",
              "      <td>0.45</td>\n",
              "      <td>8.8</td>\n",
              "      <td>6</td>\n",
              "      <td>white</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>6.3</td>\n",
              "      <td>0.30</td>\n",
              "      <td>0.34</td>\n",
              "      <td>1.6</td>\n",
              "      <td>0.049</td>\n",
              "      <td>14.0</td>\n",
              "      <td>132.0</td>\n",
              "      <td>0.9940</td>\n",
              "      <td>3.30</td>\n",
              "      <td>0.49</td>\n",
              "      <td>9.5</td>\n",
              "      <td>6</td>\n",
              "      <td>white</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>8.1</td>\n",
              "      <td>0.28</td>\n",
              "      <td>0.40</td>\n",
              "      <td>6.9</td>\n",
              "      <td>0.050</td>\n",
              "      <td>30.0</td>\n",
              "      <td>97.0</td>\n",
              "      <td>0.9951</td>\n",
              "      <td>3.26</td>\n",
              "      <td>0.44</td>\n",
              "      <td>10.1</td>\n",
              "      <td>6</td>\n",
              "      <td>white</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>7.2</td>\n",
              "      <td>0.23</td>\n",
              "      <td>0.32</td>\n",
              "      <td>8.5</td>\n",
              "      <td>0.058</td>\n",
              "      <td>47.0</td>\n",
              "      <td>186.0</td>\n",
              "      <td>0.9956</td>\n",
              "      <td>3.19</td>\n",
              "      <td>0.40</td>\n",
              "      <td>9.9</td>\n",
              "      <td>6</td>\n",
              "      <td>white</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>6.2</td>\n",
              "      <td>0.32</td>\n",
              "      <td>0.16</td>\n",
              "      <td>7.0</td>\n",
              "      <td>0.045</td>\n",
              "      <td>30.0</td>\n",
              "      <td>136.0</td>\n",
              "      <td>0.9949</td>\n",
              "      <td>3.18</td>\n",
              "      <td>0.47</td>\n",
              "      <td>9.6</td>\n",
              "      <td>6</td>\n",
              "      <td>white</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-98ccc573-a2a4-4743-8a7a-f19131a2f5a0')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-98ccc573-a2a4-4743-8a7a-f19131a2f5a0 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-98ccc573-a2a4-4743-8a7a-f19131a2f5a0');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 31
        }
      ],
      "source": [
        "df_white['color'] = 'white'\n",
        "df_white.head()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 32,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 270
        },
        "id": "IZYwlP3VoltW",
        "outputId": "659c8da3-d626-4b3b-a7a1-b223792225ea"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   fixed_acidity  volatile_acidity  citric_acid  residual_sugar  chlorides  \\\n",
              "0            7.4              0.70         0.00             1.9      0.076   \n",
              "1            7.8              0.88         0.00             2.6      0.098   \n",
              "2            7.8              0.76         0.04             2.3      0.092   \n",
              "3           11.2              0.28         0.56             1.9      0.075   \n",
              "5            7.4              0.66         0.00             1.8      0.075   \n",
              "\n",
              "   free_sulfur_dioxide  total_sulfur_dioxide  density    pH  sulphates  \\\n",
              "0                 11.0                  34.0   0.9978  3.51       0.56   \n",
              "1                 25.0                  67.0   0.9968  3.20       0.68   \n",
              "2                 15.0                  54.0   0.9970  3.26       0.65   \n",
              "3                 17.0                  60.0   0.9980  3.16       0.58   \n",
              "5                 13.0                  40.0   0.9978  3.51       0.56   \n",
              "\n",
              "   alcohol  quality color  \n",
              "0      9.4        5   red  \n",
              "1      9.8        5   red  \n",
              "2      9.8        5   red  \n",
              "3      9.8        6   red  \n",
              "5      9.4        5   red  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-27ff5b9e-7c5a-4387-9c22-a4ff7ae374ef\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>fixed_acidity</th>\n",
              "      <th>volatile_acidity</th>\n",
              "      <th>citric_acid</th>\n",
              "      <th>residual_sugar</th>\n",
              "      <th>chlorides</th>\n",
              "      <th>free_sulfur_dioxide</th>\n",
              "      <th>total_sulfur_dioxide</th>\n",
              "      <th>density</th>\n",
              "      <th>pH</th>\n",
              "      <th>sulphates</th>\n",
              "      <th>alcohol</th>\n",
              "      <th>quality</th>\n",
              "      <th>color</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>7.4</td>\n",
              "      <td>0.70</td>\n",
              "      <td>0.00</td>\n",
              "      <td>1.9</td>\n",
              "      <td>0.076</td>\n",
              "      <td>11.0</td>\n",
              "      <td>34.0</td>\n",
              "      <td>0.9978</td>\n",
              "      <td>3.51</td>\n",
              "      <td>0.56</td>\n",
              "      <td>9.4</td>\n",
              "      <td>5</td>\n",
              "      <td>red</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>7.8</td>\n",
              "      <td>0.88</td>\n",
              "      <td>0.00</td>\n",
              "      <td>2.6</td>\n",
              "      <td>0.098</td>\n",
              "      <td>25.0</td>\n",
              "      <td>67.0</td>\n",
              "      <td>0.9968</td>\n",
              "      <td>3.20</td>\n",
              "      <td>0.68</td>\n",
              "      <td>9.8</td>\n",
              "      <td>5</td>\n",
              "      <td>red</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>7.8</td>\n",
              "      <td>0.76</td>\n",
              "      <td>0.04</td>\n",
              "      <td>2.3</td>\n",
              "      <td>0.092</td>\n",
              "      <td>15.0</td>\n",
              "      <td>54.0</td>\n",
              "      <td>0.9970</td>\n",
              "      <td>3.26</td>\n",
              "      <td>0.65</td>\n",
              "      <td>9.8</td>\n",
              "      <td>5</td>\n",
              "      <td>red</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>11.2</td>\n",
              "      <td>0.28</td>\n",
              "      <td>0.56</td>\n",
              "      <td>1.9</td>\n",
              "      <td>0.075</td>\n",
              "      <td>17.0</td>\n",
              "      <td>60.0</td>\n",
              "      <td>0.9980</td>\n",
              "      <td>3.16</td>\n",
              "      <td>0.58</td>\n",
              "      <td>9.8</td>\n",
              "      <td>6</td>\n",
              "      <td>red</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>7.4</td>\n",
              "      <td>0.66</td>\n",
              "      <td>0.00</td>\n",
              "      <td>1.8</td>\n",
              "      <td>0.075</td>\n",
              "      <td>13.0</td>\n",
              "      <td>40.0</td>\n",
              "      <td>0.9978</td>\n",
              "      <td>3.51</td>\n",
              "      <td>0.56</td>\n",
              "      <td>9.4</td>\n",
              "      <td>5</td>\n",
              "      <td>red</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-27ff5b9e-7c5a-4387-9c22-a4ff7ae374ef')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-27ff5b9e-7c5a-4387-9c22-a4ff7ae374ef button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-27ff5b9e-7c5a-4387-9c22-a4ff7ae374ef');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 32
        }
      ],
      "source": [
        "#Appending datasets of both the Red and White Wines \n",
        "df1 = df_red.append(df_white)\n",
        "wines_df = df1\n",
        "wines_df.head()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 55,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "oGcvgDhIoltX",
        "outputId": "f2d9e24e-ac80-4513-e6b6-68e6a65eef61"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "color\n",
              "red      5.623252\n",
              "white    5.854835\n",
              "Name: quality, dtype: float64"
            ]
          },
          "metadata": {},
          "execution_count": 55
        }
      ],
      "source": [
        "#Exploratory Dta Analysis \n",
        "#Checking which wine has higher quality\n",
        "wines_df.groupby(['color'])['quality'].mean()"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "k6ig-i7uoltX"
      },
      "source": [
        "Here, we can see that **White Wine** has higher quality."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 34,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 440
        },
        "id": "URmTmfFRoltY",
        "outputId": "4960706d-9199-4fee-baf8-99df982e5689"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Text(0.5, 1.0, 'Correlation Matrix of Both Wines (for Quality)')"
            ]
          },
          "metadata": {},
          "execution_count": 34
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1152x360 with 2 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ],
      "source": [
        "#Correlation Matrix for Quality (Both, Red & White)\n",
        "plt.figure(figsize=(16,5))\n",
        "sns.heatmap(wines_df.corr(),annot=True)\n",
        "plt.title('Correlation Matrix of Both Wines (for Quality)')"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 35,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 440
        },
        "id": "ImKvhInHoltY",
        "outputId": "4ccd8946-62e3-49b6-843f-23302c1eb750"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Text(0.5, 1.0, 'Correlation Matrix of Red Wine (for Quality)')"
            ]
          },
          "metadata": {},
          "execution_count": 35
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1152x360 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ],
      "source": [
        "plt.figure(figsize=(16,5))\n",
        "sns.heatmap(df_red.corr(),annot=True)\n",
        "plt.title('Correlation Matrix of Red Wine (for Quality)')"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 36,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 440
        },
        "id": "esDOZS6LoltY",
        "outputId": "edc1156c-ca8d-43f7-bc22-ca6892dd5c63"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Text(0.5, 1.0, 'Correlation Matrix of White Wine (for Quality)')"
            ]
          },
          "metadata": {},
          "execution_count": 36
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1152x360 with 2 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ],
      "source": [
        "plt.figure(figsize=(16,5))\n",
        "sns.heatmap(df_white.corr(),annot=True)\n",
        "plt.title('Correlation Matrix of White Wine (for Quality)')"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "FLFcKYSIoltZ"
      },
      "source": [
        "Here, for all the 3 categories, we can see that **Sulfur dioxide** is highly correlated with the Quality of a wine. Followed by **Density & Alcohol**"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 37,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 351
        },
        "id": "WKFvks7Colta",
        "outputId": "fc99a875-6204-4724-8760-2b6cfc1bf14f"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.8/dist-packages/seaborn/_decorators.py:36: FutureWarning: Pass the following variable as a keyword arg: x. From version 0.12, the only valid positional argument will be `data`, and passing other arguments without an explicit keyword will result in an error or misinterpretation.\n",
            "  warnings.warn(\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7f4de8051520>"
            ]
          },
          "metadata": {},
          "execution_count": 37
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ],
      "source": [
        "#Checking and setting the Number Of Wines by Quality Standards\n",
        "sns.countplot(wines_df[\"quality\"], palette=\"muted\")"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "hn7rmFhYolta"
      },
      "source": [
        "**Wine Quality Standards:**\n",
        "\n",
        "3,4 = Low\n",
        "\n",
        "5,6 = Medium\n",
        "\n",
        "7,8,9 = High"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 38,
      "metadata": {
        "id": "kmZsNoVmolta"
      },
      "outputs": [],
      "source": [
        "quality = wines_df[\"quality\"].values\n",
        "category = []\n",
        "for num in quality:\n",
        "    if num < 5:\n",
        "        category.append(\"Low\")\n",
        "    elif num > 6:\n",
        "        category.append(\"High\")\n",
        "    else:\n",
        "        category.append(\"Medium\")"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 39,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 463
        },
        "id": "kd9T5v2Polta",
        "outputId": "14aa5d87-af6c-4edf-aadc-d7303d3958a4"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[('High', 1009), ('Low', 236), ('Medium', 4075)]\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.8/dist-packages/seaborn/_decorators.py:36: FutureWarning: Pass the following variable as a keyword arg: x. From version 0.12, the only valid positional argument will be `data`, and passing other arguments without an explicit keyword will result in an error or misinterpretation.\n",
            "  warnings.warn(\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7f4de802e160>"
            ]
          },
          "metadata": {},
          "execution_count": 39
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 720x432 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ],
      "source": [
        "print([(i, category.count(i)) for i in set(category)])\n",
        "plt.figure(figsize=(10, 6))\n",
        "sns.countplot(category, palette=\"muted\")"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 40,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 295
        },
        "id": "SoRUOW1_olta",
        "outputId": "ec3d97c2-1448-46d0-f80e-ffa2ecd7012e"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "#Proportions\n",
        "sns.set_style('darkgrid')\n",
        "\n",
        "# getting counts for each rating and color\n",
        "color_counts = wines_df.groupby(['color', 'quality']).count()['pH']\n",
        "\n",
        "# getting total counts for each color\n",
        "color_totals = wines_df.groupby('color').count()['pH']\n",
        "\n",
        "# getting proportions by dividing red rating counts by total # of red samples\n",
        "red_proportions = color_counts['red'] / color_totals['red']\n",
        "\n",
        "# getting proportions by dividing white rating counts by total # of white samples\n",
        "white_proportions = color_counts['white'] / color_totals['white']\n",
        "\n",
        "\n",
        "red_proportions['9'] = 0\n",
        "\n",
        "\n",
        "ind = np.arange(len(red_proportions))  # the x locations for the groups\n",
        "width = 0.35       # the width of the bars\n",
        "\n",
        "# plot bars\n",
        "red_bars = plt.bar(ind, red_proportions, width, color='r', alpha=.7, label='Red Wine')\n",
        "white_bars = plt.bar(ind + width, white_proportions, width, color='w', alpha=.7, label='White Wine')\n",
        "\n",
        "# title and labels\n",
        "plt.ylabel('Proportion')\n",
        "plt.xlabel('Quality')\n",
        "plt.title('Proportion by Wine Color and Quality')\n",
        "locations = ind + width / 2  # xtick locations\n",
        "labels = ['3', '4', '5', '6', '7', '8', '9']  # xtick labels\n",
        "plt.xticks(locations, labels)\n",
        "\n",
        "# legend\n",
        "plt.legend();"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 41,
      "metadata": {
        "id": "l47POboYoltb"
      },
      "outputs": [],
      "source": [
        "#Testing and Predicting for Red Wine using Linear Regression\n",
        "from sklearn.model_selection import train_test_split\n",
        "from sklearn.linear_model import LinearRegression\n",
        "from sklearn import metrics"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 42,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "b_PD1SmHoltb",
        "outputId": "79305541-62b9-4a28-e9ce-dddf4d9c7127"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "fixed_acidity           0.119024\n",
            "volatile_acidity       -0.395214\n",
            "citric_acid             0.228057\n",
            "residual_sugar          0.013640\n",
            "chlorides              -0.130988\n",
            "free_sulfur_dioxide    -0.050463\n",
            "total_sulfur_dioxide   -0.177855\n",
            "density                -0.184252\n",
            "pH                     -0.055245\n",
            "sulphates               0.248835\n",
            "alcohol                 0.480343\n",
            "Name: quality, dtype: float64\n"
          ]
        }
      ],
      "source": [
        "correlations = df_red.corr()['quality'].drop('quality')\n",
        "print(correlations)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 43,
      "metadata": {
        "id": "Zu6S8Blkoltc"
      },
      "outputs": [],
      "source": [
        "def get_features(correlation_threshold):\n",
        "    max_corrs = correlations.abs()\n",
        "    high_correaltions = max_corrs\n",
        "    high_correaltions =  max_corrs[max_corrs > correlation_threshold].index.values.tolist()\n",
        "\n",
        "    return high_correaltions"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 44,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "7zkKEfcQoltc",
        "outputId": "35bd48f2-d0c9-4afb-fed6-cc92fa94ae3e"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "['fixed_acidity', 'volatile_acidity', 'citric_acid', 'chlorides', 'total_sulfur_dioxide', 'density', 'sulphates', 'alcohol']\n"
          ]
        }
      ],
      "source": [
        "features = get_features(0.1)\n",
        "print(features)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 45,
      "metadata": {
        "id": "0WT1BBP0olte"
      },
      "outputs": [],
      "source": [
        "#Splitting Train and Test sets\n",
        "X = df_red[features]\n",
        "y = df_red['quality'] "
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 46,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "O0Yo0giSolte",
        "outputId": "2a616fc4-44f2-4766-eab0-16f223b51bd0"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   fixed_acidity  volatile_acidity  citric_acid  chlorides  \\\n",
              "0            7.4              0.70         0.00      0.076   \n",
              "1            7.8              0.88         0.00      0.098   \n",
              "2            7.8              0.76         0.04      0.092   \n",
              "3           11.2              0.28         0.56      0.075   \n",
              "5            7.4              0.66         0.00      0.075   \n",
              "\n",
              "   total_sulfur_dioxide  density  sulphates  alcohol  \n",
              "0                  34.0   0.9978       0.56      9.4  \n",
              "1                  67.0   0.9968       0.68      9.8  \n",
              "2                  54.0   0.9970       0.65      9.8  \n",
              "3                  60.0   0.9980       0.58      9.8  \n",
              "5                  40.0   0.9978       0.56      9.4  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-64201ca6-1d1f-4a9b-80c8-599e5507a2bd\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>fixed_acidity</th>\n",
              "      <th>volatile_acidity</th>\n",
              "      <th>citric_acid</th>\n",
              "      <th>chlorides</th>\n",
              "      <th>total_sulfur_dioxide</th>\n",
              "      <th>density</th>\n",
              "      <th>sulphates</th>\n",
              "      <th>alcohol</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>7.4</td>\n",
              "      <td>0.70</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.076</td>\n",
              "      <td>34.0</td>\n",
              "      <td>0.9978</td>\n",
              "      <td>0.56</td>\n",
              "      <td>9.4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>7.8</td>\n",
              "      <td>0.88</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.098</td>\n",
              "      <td>67.0</td>\n",
              "      <td>0.9968</td>\n",
              "      <td>0.68</td>\n",
              "      <td>9.8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>7.8</td>\n",
              "      <td>0.76</td>\n",
              "      <td>0.04</td>\n",
              "      <td>0.092</td>\n",
              "      <td>54.0</td>\n",
              "      <td>0.9970</td>\n",
              "      <td>0.65</td>\n",
              "      <td>9.8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>11.2</td>\n",
              "      <td>0.28</td>\n",
              "      <td>0.56</td>\n",
              "      <td>0.075</td>\n",
              "      <td>60.0</td>\n",
              "      <td>0.9980</td>\n",
              "      <td>0.58</td>\n",
              "      <td>9.8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>7.4</td>\n",
              "      <td>0.66</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.075</td>\n",
              "      <td>40.0</td>\n",
              "      <td>0.9978</td>\n",
              "      <td>0.56</td>\n",
              "      <td>9.4</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-64201ca6-1d1f-4a9b-80c8-599e5507a2bd')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-64201ca6-1d1f-4a9b-80c8-599e5507a2bd button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-64201ca6-1d1f-4a9b-80c8-599e5507a2bd');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 46
        }
      ],
      "source": [
        "X.head()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 47,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "m0ks4EFJolte",
        "outputId": "5442794d-6fc2-42f8-ec4e-228cffc4041a"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0    5\n",
              "1    5\n",
              "2    5\n",
              "3    6\n",
              "5    5\n",
              "Name: quality, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 47
        }
      ],
      "source": [
        "y.head()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 48,
      "metadata": {
        "id": "CTk7TgTPolte"
      },
      "outputs": [],
      "source": [
        "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3,random_state=0)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 49,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "-ws3tGPVolte",
        "outputId": "916a91ce-90aa-42bf-aed2-4a5dd0c75208"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[ 5.16696099e-02 -1.09856706e+00 -3.68034005e-01 -1.29318086e+00\n",
            " -1.40652403e-03 -2.59346998e+00  9.59152262e-01  3.29101526e-01]\n"
          ]
        }
      ],
      "source": [
        "lr = LinearRegression()\n",
        "lr.fit(X_train, y_train)\n",
        "\n",
        "print(lr.coef_)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 50,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "0VKjNjzpoltf",
        "outputId": "5ccda247-0d9c-4fdb-92c3-5e605d938690"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[5.75768042 6.36051956 5.74845397 4.98380708 6.54911236 5.39740415\n",
            " 5.34973496 5.45076135 4.90496017 5.24836069 5.62617594 5.28457442\n",
            " 5.7192304  5.97586401 5.83224584 6.21787411 5.1745115  5.11957969\n",
            " 5.35299465 6.24728332 5.37635091 5.35732814 6.52857162 4.96627635\n",
            " 5.09401441 5.28156504 5.30778399 5.58122226 5.65384127 5.0407673\n",
            " 5.17845719 6.8536538  6.23810537 5.0468114  5.40495885 6.57594151\n",
            " 4.99576388 5.13300793 5.30350147 5.30837235 6.14094963 5.25881618\n",
            " 5.60503569 5.21380082 5.44318501 6.77781334 5.20222364 4.77608325\n",
            " 5.29513241 6.07657014 5.38611723 5.41059559 5.81389292 5.760708\n",
            " 6.4021543  6.31275758 6.01882876 5.35745192 5.42334717 5.29365686\n",
            " 5.80030693 6.34106622 5.6892813  6.5230288  5.08486369 5.19770914\n",
            " 5.60501972 5.30141037 5.15476081 6.08372692 6.06297774 6.17443979\n",
            " 4.8014021  5.48780729 5.14226905 6.13439719 5.34643773 6.34173255\n",
            " 5.20136374 5.44410066 6.18245224 5.12771442 5.89879331 5.81659836\n",
            " 5.62767622 5.28457343 6.0329082  5.01290994 4.97201601 5.90567852\n",
            " 6.84750181 4.722413   5.23970895 6.01894766 5.33900772 5.33483364\n",
            " 5.71177734 6.13238846 5.03356835 4.93992613 6.52298747 5.13985348\n",
            " 5.24633961 5.95939597 6.28710505 6.16730904 5.3702956  5.17584242\n",
            " 6.19593517 4.84482668 5.30583738 5.24773441 5.74487739 5.05262059\n",
            " 5.79651133 5.11409227 6.59191212 5.35421083 5.02011441 5.80288743\n",
            " 5.77053431 5.27498689 5.7727942  6.06777634 5.91818569 5.609591\n",
            " 5.52767223 5.80877664 5.01352752 6.46051543 5.5228834  6.49175791\n",
            " 5.21259007 6.00776867 6.34571571 5.7204434  4.96968217 5.30964935\n",
            " 5.1870108  6.03627155 5.62326869 6.39491141 5.38541677 6.03008732\n",
            " 5.27639117 4.90481967 5.94292953 6.43412788 5.5411086  6.37927056\n",
            " 5.97141703 5.96057826 5.84966069 6.49113382 5.32430564 5.55344048\n",
            " 5.42531951 5.28524852 5.68984549 5.57374112 4.92391834 5.21477115\n",
            " 5.97298346 5.47022218 5.27763496 4.91784028 6.02372613 6.5622585\n",
            " 5.87762565 5.36845703 5.66929628 5.9808473  4.97788383 5.29996243\n",
            " 5.43503453 5.11206934 5.45085361 7.11165503 6.12498732 6.34647209\n",
            " 5.61422021 4.84313249 6.02728054 6.05816997 6.25203301 5.0887382\n",
            " 6.01101874 5.50017707 4.92296747 5.05594721 5.15137807 5.45170014\n",
            " 5.03451173 6.09938056 5.4844732  6.17986513 5.27054798 4.69843758\n",
            " 6.00283857 5.85115028 6.62344208 5.16991532 5.56359519 4.98560296\n",
            " 4.83777521 6.50277062 6.20638654 5.82934485 5.2682587  5.84018593\n",
            " 5.22266544 5.4917566  5.85213534 4.90405393 6.72867827 5.14733999\n",
            " 5.63597195 4.90747392 5.5152146  5.43115527 6.14180561 5.09548882\n",
            " 5.91118157 5.43097722 6.82451252 5.35290159 6.01770446 5.28816648\n",
            " 5.26654846 5.63651131 6.16805996 5.21674876 4.76546887 5.20796963\n",
            " 5.44136903 5.64257527 5.99402884 5.73768937 5.12607112 5.66033035\n",
            " 6.82458073 5.4878798  5.00597392 5.72967787 5.88305378 6.32914303\n",
            " 6.19347976 4.97155369 6.57995235 6.30062521 5.21266724 6.21507951\n",
            " 5.89470294 5.96625089 5.42846932 5.0584427  5.42962726 5.31014357\n",
            " 4.99087717 6.04930057 5.70430105 5.41046757 5.08865735 6.54772334\n",
            " 5.28123273 5.13112625 5.13919402 5.32457817 5.54103898 4.94765661\n",
            " 5.0193679  6.12613671 5.28978393 5.65728438 5.35068718 6.12746847\n",
            " 5.3509703  5.38266142 5.16007516 4.72925704 5.8702862  4.62318953\n",
            " 4.63633856 6.67439508 5.34963558 5.58975231 5.68717939 5.90494766\n",
            " 5.00040252 5.84921799 5.08619357 5.35284866 6.00779532 5.47449202\n",
            " 5.7404741  5.34112405 6.04864158 5.93041614 5.62100068 4.97834599\n",
            " 5.37128842 5.08351135 6.00048906 5.0057478  5.8356247  5.32703144\n",
            " 5.23756654 5.40390738 5.45910018 6.18959758 5.39891022 5.19871786\n",
            " 6.12199117 4.82512779 5.02876284 5.36431428 5.10755503 5.04863279\n",
            " 5.25804826 5.38491028 5.23906354 5.23375092 5.52112672 6.20955053\n",
            " 6.33198709 5.90341992 6.54423187 6.03231588 5.57728754 5.64312306\n",
            " 6.66648651 5.5787623  6.14814796 5.16317879 5.7278488  6.09351171\n",
            " 6.16678574 5.40368845 5.68344277 6.46819907 4.96896305 6.17936079\n",
            " 6.48689779 6.63065473 5.15470175 5.94702972 6.318218   6.48614654\n",
            " 5.01225133 5.54772631 5.42563645 5.67670708 5.36865102 5.56546962\n",
            " 5.77560148 5.22973209 4.94486591 6.03865637 6.11335984 5.94118054\n",
            " 5.89670366 5.6019223  6.38607522 6.24228706 6.07721263 4.73226559\n",
            " 5.45808486 5.25056904 5.27478074 5.14258266 5.51272825 5.9609391\n",
            " 5.90331496 5.91087347 4.45482985 5.00067067 5.02623314 5.3533855\n",
            " 6.0055828  5.68295559 6.49665837 4.31453633 5.88185046 5.80590583\n",
            " 5.77235471 5.17644487 5.2528647  5.14025327 4.32728229 6.3894833\n",
            " 5.29196565 5.09303477 5.74499873 5.59500536 5.30260187 6.32943622\n",
            " 5.21101395 6.1849706  5.15569673 5.45066612 5.88527101 5.48199032\n",
            " 4.85731918 5.09714073 5.59443081 5.10254729 5.16072994 4.90787391\n",
            " 5.19781737 5.04309366 6.58489035 6.87621787 6.34090852 6.00670827\n",
            " 5.28837905 6.25384774 5.58005572 5.52242826 5.84471096 5.52793321\n",
            " 6.49550594 5.93690693 5.13267443 5.86882962 4.89031752 4.94170377\n",
            " 4.83318736 5.48378932 5.49919479 6.03357878 6.10769518 4.93930923\n",
            " 5.82471597 5.53577863 6.34929799 5.65802616 5.73290929 5.53039371\n",
            " 6.16988452 6.27491382 5.45365864 5.16131552 5.78005506 6.0281009\n",
            " 6.66405493 5.35010303 4.99544636 5.9256146  5.15344223 6.44445407\n",
            " 5.89465578 5.2183654  5.16444871 5.48705634 5.26942927 5.70409582\n",
            " 5.32137561 5.07955541 5.89621049 6.04598208 5.53729955 5.74492757\n",
            " 6.06129006 6.11918957 5.8135761  5.73058715 4.9814923  5.98358639\n",
            " 4.90136335 5.41793639 5.32542938 6.21640621 4.58801772 6.54937843\n",
            " 5.60270257 5.96488839 5.41977068 5.80928198 6.49956187 5.55012416\n",
            " 6.11885363 5.37040847 5.6918832  4.83402567 5.4980829  5.83706922\n",
            " 5.33677523 6.17485411 6.00232795 5.16356875 5.71454797 5.41112741\n",
            " 5.21405774 5.30833686 4.98529539 5.22485188 6.13118994 5.49932767\n",
            " 5.20063326 5.22334397 6.51640685 4.98935881 6.15829719 5.08645897\n",
            " 5.47165822 5.06242465 5.88415778 6.24307319 6.36628994 5.26418561\n",
            " 5.75847775 5.77697651 5.94356555 5.31505104 5.03935614 4.89435814\n",
            " 5.08428115 5.16758288 5.3224276  5.02196573 5.10993061 5.41656253\n",
            " 5.12794841 4.94099226 5.64589643 6.11226961 5.14796205 5.73561083\n",
            " 6.26811236 5.69963351 5.50201593 4.94751912 5.46468766 5.06670827\n",
            " 5.92229353 5.29845535 5.86223815 5.99266129 5.34915238 5.82777654\n",
            " 6.27692529 5.74453392 6.30642535 5.47563462 6.07181878 5.3535536\n",
            " 5.65313113 5.61844646 5.18483879 5.92864909 6.51359142 5.36885\n",
            " 5.01106421 5.32632443 6.1698757  5.86020778 6.70894546 6.30284051\n",
            " 5.47478425 5.29048468 5.19212337 6.25233856 5.06324568 5.10751499\n",
            " 5.31867176 5.84371306 6.08455288 5.23331001 5.338901   5.53181565\n",
            " 6.12861956 5.27892231 5.44884601 4.74402701 5.18434682 6.29507747\n",
            " 6.30563471 6.00206257 5.51441382 5.72710067 4.92904012 6.28007985\n",
            " 5.14855821 5.84022569 5.12171794 6.05704849 6.10943144 6.00941947\n",
            " 5.40247791 5.13843904 6.67559235 5.09832772 5.42967183 4.68363431\n",
            " 5.02628942 5.00420821 5.44600433 5.03589465 6.17884585 6.25175583\n",
            " 5.32384832 5.60390899 6.04613702 4.79989426 5.30307325 5.59248011\n",
            " 6.48172839 5.62592527 5.84135019 5.9687158  6.45867088 5.95498444\n",
            " 5.24873339 5.95198448 6.1301215  5.68577862 5.49458842 5.86014951\n",
            " 4.70388648 5.7295213  6.50968312 5.55888507 5.71754387 5.23063289\n",
            " 4.93995703 5.53422453 5.04686899 5.86830994 5.18045667 5.89557493\n",
            " 5.17000223 6.50478552 5.26355094 5.38346507 6.17158344 5.61481149\n",
            " 6.18026187 5.33740242 5.40557374 5.11868749 5.94465847 6.26369028\n",
            " 5.577339   5.65391027 5.9145917  5.8606719  6.33264872 5.54009602\n",
            " 6.49699652 6.08412925 6.15866958 5.57315062 5.09465079 6.52899376\n",
            " 4.99981978 5.71967177 5.45099961 5.7878808  5.1375328  5.16541333\n",
            " 5.4083601  5.12793879 5.13201781 6.03464035 6.00473852 6.60322285\n",
            " 5.29368927 5.65652869 5.26195813 6.48366743 5.1855078  6.26168029\n",
            " 5.87386026 5.66284148 5.727469   5.20931285 4.954835   5.55297816\n",
            " 6.45817949 6.57211827 4.57934683 5.49877977 4.90445985 5.12232831\n",
            " 5.16196782 5.12102185 5.0465386  5.66539333 6.22468092 5.72191858\n",
            " 6.10051696 5.36399844 5.56863061 6.48116434 6.13374756 5.41502433\n",
            " 5.79786431 5.13408401 6.31211454 6.99259014 5.10997148 5.4594262\n",
            " 5.61927429 6.10456482 5.27799281 5.00159673 5.64546307 5.07773579\n",
            " 4.82169865 5.7213264  5.81682129 4.98399754 5.38345215 6.5133573\n",
            " 6.31823604 5.70371855 5.17501192 5.60215072 5.14466408 5.83461097\n",
            " 4.84467542 4.80979012 5.26261705 5.29289686 6.08735452 5.94955301\n",
            " 5.1067869  6.08880045 5.77246491 5.48427532 6.13434375 5.27963396\n",
            " 5.67913717 5.12995844 5.78456932 5.70204286 6.63006445 6.18964289\n",
            " 4.98947886 5.35118136 5.46821212 5.84431359 5.88962784 5.2510858\n",
            " 6.32655737 6.34365973 5.45697097 6.17397191 5.58518056 5.71895492\n",
            " 5.02635599 5.31632742 5.04513994 5.46877538 5.100743   4.917984\n",
            " 6.09542735 5.23411505 6.08916998 5.92403628 5.85145519 6.00990821\n",
            " 5.33251033 6.09564014 5.1507825  6.14360178 6.13309139 4.89782802\n",
            " 5.42006078 5.04155718 6.53777602 6.03992885 5.68471685 5.10595662\n",
            " 5.0728115  5.6589324  5.57993769 5.9307309  6.29825568 5.62617022\n",
            " 5.01479732 5.1587987  6.41538419 5.33009773 4.87695328 5.40425452\n",
            " 6.06400755 5.72504679 5.85804207 5.15204398 5.92990353 5.04535773\n",
            " 5.00733786 5.4017116  6.27511295 5.37969423 6.77099495 5.97667353\n",
            " 6.25760307 4.85951207 5.28165982 5.02556209 5.58477694 5.3492369\n",
            " 6.89874506 5.15102428 4.75885476 5.25903639 5.22695395 6.10030532\n",
            " 5.02316057 5.98408069 4.72361118 5.51289443 5.10282991 6.31391904\n",
            " 6.51860198 5.71324337 5.91317482 6.36063237 5.68920246 5.76652543\n",
            " 5.23127458 6.18229137 5.27458615 6.6329752  5.91861893 5.33479799\n",
            " 5.21747526 4.86019834 5.69184636 5.48031362 6.29065491 7.02410896\n",
            " 5.29837179 6.35509819 5.75118638 5.01050743 5.14305523 5.99557271\n",
            " 5.24768506 5.25607482 5.76569527 5.35226985 5.54131025 6.64949059\n",
            " 5.08769445 5.29464662 5.87868621 6.53044051 5.12817723 5.90948903\n",
            " 5.65512875 5.84795033 6.1185423  6.12397562 6.45557044 5.90967225\n",
            " 5.42995598 6.14381351 5.50726251 5.47702362 5.55447692 5.41996053\n",
            " 6.32348494 5.72932414 6.32678423 6.20304182 6.84268374 4.95208551\n",
            " 5.33986836 6.19192916 6.11311353 4.88754399 5.46995754 5.69835884\n",
            " 7.03133304 5.69107907 5.33422108 5.18166314 5.07873388 5.5850796\n",
            " 6.41705744 5.06441967 5.44687999 5.11877026 4.43440502 6.86469122\n",
            " 6.09041866 5.61629725 6.26686248 4.88602209 5.03465538 6.11803816\n",
            " 5.71110649 5.17112939 5.34834822 5.27159101 5.12040792 5.11953444\n",
            " 6.32878355 5.33481869 5.39876598 6.61663265 5.44300637 5.69676932\n",
            " 6.45092248 6.88224362 5.08677376 4.64008533 5.85653038 6.11936752\n",
            " 5.3824316  4.99173266 5.161874   6.74227424 5.27217756 6.21844609\n",
            " 5.80621811 5.558651   4.86145899 5.35968174 5.33553817 5.34378704\n",
            " 6.46336264 4.7051229  6.24298377 5.30344382 5.25496564 6.0666032\n",
            " 4.87426586 5.88408199 5.07075781 5.24356729 5.72750191 4.78281032\n",
            " 6.16124054 6.11840086 5.11082485 5.72806615 5.6768559  5.21491771\n",
            " 5.80865273 5.15782391 5.41867755 5.75331666 5.7611258  5.86803036\n",
            " 5.06098093 5.37451786 5.21946103]\n",
            "[6.0077112  5.2201343  5.40085247 5.91035882 6.37506785 5.74117147\n",
            " 5.81634381 5.69766372 5.0510908  5.99436433 5.44432598 6.27705279\n",
            " 5.67374931 4.83762649 6.58977885 5.61541606 6.06615277 5.7486477\n",
            " 4.9897921  5.71060356 5.79154568 4.8627427  6.00304651 6.41567047\n",
            " 5.63432152 7.66117606 6.50194528 5.87161317 5.0542708  4.69711688\n",
            " 5.170847   4.87389326 5.24638544 5.57298587 6.80208674 6.14831424\n",
            " 5.25818745 5.91666265 5.65405735 6.5844106  5.46141544 5.72154145\n",
            " 6.27748066 6.08790857 5.8845477  5.85781688 5.3376965  5.32426139\n",
            " 5.5776624  5.54388132 6.36791807 5.15917162 5.61183692 5.62868151\n",
            " 6.20071943 6.60820049 5.36060611 4.96638873 5.63063906 6.52901071\n",
            " 5.25258118 5.63465047 6.25424533 4.97319579 5.45053734 5.08167324\n",
            " 5.20710276 5.58942934 5.16069118 5.32674969 5.27843184 6.36178775\n",
            " 5.21697143 5.27582348 6.2063654  5.50524533 5.6525692  5.27574032\n",
            " 5.919815   5.69943873 5.21494678 5.22296028 6.42920004 6.28366618\n",
            " 5.9238236  6.61447618 5.30371248 5.93397309 5.62714936 6.16997616\n",
            " 6.37125769 6.47295389 4.80617538 5.48317391 5.12325569 5.79593113\n",
            " 6.48552048 5.47115007 5.37257105 5.8984417  6.19957878 5.90440666\n",
            " 6.39893051 5.99771102 6.0942136  4.88344481 5.49446769 5.2089366\n",
            " 6.06669233 5.38989609 5.52403549 5.44747444 5.28148933 5.94722849\n",
            " 4.89916104 5.57257799 5.85047445 6.13022969 4.69092687 5.74652921\n",
            " 5.24008561 5.45057535 4.8280813  5.61136393 6.46704859 5.17232963\n",
            " 6.07995986 6.00780815 5.02391433 5.33676651 6.31196722 6.56568309\n",
            " 6.17876415 5.74081281 5.4593988  6.38084388 6.3873112  5.91068673\n",
            " 6.07272094 6.05488371 6.02276922 5.10816608 5.51081549 5.08385182\n",
            " 4.93171436 5.42704329 5.79150004 5.35404155 5.33758544 6.41480565\n",
            " 5.31049017 5.13458081 5.0828751  6.55608622 5.17344527 5.72431582\n",
            " 6.95618168 5.17831934 6.44568007 6.00188098 5.20045829 6.05344332\n",
            " 5.42158604 5.38400255 5.82743834 5.31384677 5.33901731 6.06370976\n",
            " 5.53141747 6.02909734 5.29524614 5.49633691 5.42747822 5.81911488\n",
            " 5.24725471 5.34699516 6.08729823 5.46005524 5.00184077 5.59582284\n",
            " 5.89488706 5.35075198 5.48031315 5.15397101 4.89101293 6.58800695\n",
            " 5.20567128 5.5236965  6.06535861 6.32693586 5.87273145 5.71220293\n",
            " 6.21511992 4.78085389 5.32556892 6.48021815 6.37221925 5.40136754\n",
            " 5.56401277 5.64360699 5.1457199  5.28957367 5.91000217 5.00132384\n",
            " 4.78154912 5.43568974 5.06935535 5.65206459 6.01119134 5.94734261\n",
            " 5.38507303 6.52028814 4.83905135 5.52646801 5.62765891 5.32234915\n",
            " 5.68187759 6.50594214 6.64924067 5.79978073 5.42031971 5.99369589\n",
            " 5.1840425  5.04373601 6.25276911 5.78164078 5.12222658 5.30361071\n",
            " 4.88552791 5.27890693 5.81614298 6.66761818 5.1472966  6.75414472\n",
            " 6.26543954 5.19072766 5.70512658 5.40268103 5.13500925 5.3346495\n",
            " 5.44426884 6.00582937 5.66341858 5.34695104 6.53615531 5.65128999\n",
            " 6.36728154 5.20038157 5.87619202 5.54475169 5.4524887  5.14745499\n",
            " 6.09392787 5.02948626 5.66401268 5.67727594 5.27072154 5.86193259\n",
            " 6.00021698 5.59505809 5.77008627 5.49560231 5.31916351 5.99964676\n",
            " 5.54698025 4.79212534 7.03607838 5.04703476 5.58844228 4.5392893\n",
            " 5.06628957 5.83110461 5.19798946 6.56851195 6.119663   6.13663565\n",
            " 5.44374599 5.46608209 4.88073861 6.02739191 5.88705653 5.91628495\n",
            " 6.34466456 5.99111351 5.32332701 5.12031642 5.45481315 5.23327913\n",
            " 5.3420262  5.24356605 5.50463375 6.20788369 5.89287551 5.9804909\n",
            " 5.10366828 5.339389   5.54415772 6.30043692 6.43742028 5.26295363\n",
            " 6.28916565 6.14061663 5.08583667 5.45719854 5.26163426 5.44660817\n",
            " 5.46610911 6.59385442 5.31936481 6.16477602 6.34832447 6.08102324\n",
            " 5.69180996 5.54371596 5.16523785 5.13899709 5.01549125 5.0870597\n",
            " 5.37653274 6.52307123 5.66445497 5.19274192 5.17011924 4.9713144\n",
            " 5.04853974 5.16625528 6.33008864 5.996673   6.13014974 5.70386928\n",
            " 5.85748103 5.00425521 5.4012169  5.27406058 5.49891364 6.00305185\n",
            " 5.21577262 6.17029896 6.4999764  5.0070528  5.17323821 5.58918217\n",
            " 5.12961362 5.54021009 5.77216801 5.98130234 5.52541779 5.75436023\n",
            " 5.12026433 5.16778691 5.39791056 5.64996777 6.2364061  5.68081596\n",
            " 5.28591835 5.40172211 5.6603458  5.14882176 5.42509817 5.41009965\n",
            " 5.07917761 6.24026352 5.43624911 5.18716328 4.6356802  5.13015683\n",
            " 5.15315817 5.56935637 5.67206583 5.66724497 5.38442337 5.72066759\n",
            " 5.46992066 5.27907867 6.41128999 6.181456   5.09267885 5.01773638\n",
            " 4.78495051 5.86112041 5.38026254 5.74644959 5.87321663 5.56078306\n",
            " 5.16483527 5.53510217 5.38210657 5.82794704 5.41969803 6.21832759\n",
            " 5.15389539 5.60460361 5.20573158 6.99649776 5.76294262 5.35042508\n",
            " 5.42244248 5.41782868 6.24322521 5.34119255 5.56430561 6.39707613\n",
            " 5.10151673 5.1048675  6.39150225 6.48496704 5.307887   5.49150016]\n"
          ]
        }
      ],
      "source": [
        "train_pred = lr.predict(X_train)\n",
        "print(train_pred)\n",
        "test_pred = lr.predict(X_test)\n",
        "print(test_pred)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 51,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "4Pf322qUoltf",
        "outputId": "47fe22d7-7817-44ea-b512-e66f2abdd791"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "0.639106455563519\n",
            "0.7086926503420402\n"
          ]
        }
      ],
      "source": [
        "rmse_train = metrics.mean_squared_error(train_pred, y_train) ** 0.5\n",
        "print(rmse_train)\n",
        "\n",
        "rmse_test = metrics.mean_squared_error(test_pred, y_test) ** 0.5\n",
        "print(rmse_test)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 52,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Ns79LFh_oltf",
        "outputId": "e79873f9-fba9-4358-f5ae-b888cd588d02"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[6. 5. 5. 6. 6. 6. 6. 6. 5. 6. 5. 6. 6. 5. 7. 6. 6. 6. 5. 6. 6. 5. 6. 6.\n",
            " 6. 8. 7. 6. 5. 5. 5. 5. 5. 6. 7. 6. 5. 6. 6. 7. 5. 6. 6. 6. 6. 6. 5. 5.\n",
            " 6. 6. 6. 5. 6. 6. 6. 7. 5. 5. 6. 7. 5. 6. 6. 5. 5. 5. 5. 6. 5. 5. 5. 6.\n",
            " 5. 5. 6. 6. 6. 5. 6. 6. 5. 5. 6. 6. 6. 7. 5. 6. 6. 6. 6. 6. 5. 5. 5. 6.\n",
            " 6. 5. 5. 6. 6. 6. 6. 6. 6. 5. 5. 5. 6. 5. 6. 5. 5. 6. 5. 6. 6. 6. 5. 6.\n",
            " 5. 5. 5. 6. 6. 5. 6. 6. 5. 5. 6. 7. 6. 6. 5. 6. 6. 6. 6. 6. 6. 5. 6. 5.\n",
            " 5. 5. 6. 5. 5. 6. 5. 5. 5. 7. 5. 6. 7. 5. 6. 6. 5. 6. 5. 5. 6. 5. 5. 6.\n",
            " 6. 6. 5. 5. 5. 6. 5. 5. 6. 5. 5. 6. 6. 5. 5. 5. 5. 7. 5. 6. 6. 6. 6. 6.\n",
            " 6. 5. 5. 6. 6. 5. 6. 6. 5. 5. 6. 5. 5. 5. 5. 6. 6. 6. 5. 7. 5. 6. 6. 5.\n",
            " 6. 7. 7. 6. 5. 6. 5. 5. 6. 6. 5. 5. 5. 5. 6. 7. 5. 7. 6. 5. 6. 5. 5. 5.\n",
            " 5. 6. 6. 5. 7. 6. 6. 5. 6. 6. 5. 5. 6. 5. 6. 6. 5. 6. 6. 6. 6. 5. 5. 6.\n",
            " 6. 5. 7. 5. 6. 5. 5. 6. 5. 7. 6. 6. 5. 5. 5. 6. 6. 6. 6. 6. 5. 5. 5. 5.\n",
            " 5. 5. 6. 6. 6. 6. 5. 5. 6. 6. 6. 5. 6. 6. 5. 5. 5. 5. 5. 7. 5. 6. 6. 6.\n",
            " 6. 6. 5. 5. 5. 5. 5. 7. 6. 5. 5. 5. 5. 5. 6. 6. 6. 6. 6. 5. 5. 5. 5. 6.\n",
            " 5. 6. 6. 5. 5. 6. 5. 6. 6. 6. 6. 6. 5. 5. 5. 6. 6. 6. 5. 5. 6. 5. 5. 5.\n",
            " 5. 6. 5. 5. 5. 5. 5. 6. 6. 6. 5. 6. 5. 5. 6. 6. 5. 5. 5. 6. 5. 6. 6. 6.\n",
            " 5. 6. 5. 6. 5. 6. 5. 6. 5. 7. 6. 5. 5. 5. 6. 5. 6. 6. 5. 5. 6. 6. 5. 5.]\n"
          ]
        }
      ],
      "source": [
        "predicted_data = np.round_(test_pred)\n",
        "print(predicted_data)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 53,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Yhg-KFfeoltf",
        "outputId": "f6379127-47d1-4980-c563-22c6b6f06110"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Mean Absolute Error: 0.5471730954119732\n",
            "Mean Squared Error: 0.5022452726488252\n",
            "Root Mean Squared Error: 0.7086926503420402\n"
          ]
        }
      ],
      "source": [
        "print('Mean Absolute Error:', metrics.mean_absolute_error(test_pred, y_test))\n",
        "print('Mean Squared Error:', metrics.mean_squared_error(test_pred, y_test))\n",
        "print('Root Mean Squared Error:', np.sqrt(metrics.mean_squared_error(test_pred, y_test)))"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 54,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "M-yPsHNgoltg",
        "outputId": "fc2ef143-3f3c-435f-d4e2-a31c4a602259"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                      Coefficient\n",
            "fixed_acidity            0.051670\n",
            "volatile_acidity        -1.098567\n",
            "citric_acid             -0.368034\n",
            "chlorides               -1.293181\n",
            "total_sulfur_dioxide    -0.001407\n",
            "density                 -2.593470\n",
            "sulphates                0.959152\n",
            "alcohol                  0.329102\n"
          ]
        }
      ],
      "source": [
        "coefficients = pd.DataFrame(lr.coef_, features) \n",
        "coefficients.columns = ['Coefficient']\n",
        "print(coefficients)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "lAcabz_Uoltg"
      },
      "source": [
        "**CONCLUSION:** The above coefficients denote the impact of each on the Quality of Wine.\n",
        "Given Below:-\n",
        "\n",
        "1. Alcohol measure increase will lead to increase of 0.33 in Quality.\n",
        "2. Increase in Chlorides will decrease the quality of Wine.\n",
        "3. Sulphate measure increase will lead to increase of 0.96 in Quality.\n",
        "4. Fixed_Acidity measure increase will lead to increase of 0.05 in Quality.\n",
        "5. Increase in density will decrease the quality of Wine.\n",
        "6. Increase in Sulphur Dioxide will decrease the quality of Wine.\n",
        "7. Increase in Citric Acid will decrease the quality of Wine.\n",
        "8. Increase in Volatile Acidity will decrease the quality of Wine."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 56,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "K7iK8t09oltg",
        "outputId": "a2cc0714-5424-4501-dd96-37baccbdf257"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "fixed_acidity          -0.124636\n",
            "volatile_acidity       -0.190678\n",
            "citric_acid             0.007065\n",
            "residual_sugar         -0.117339\n",
            "chlorides              -0.217739\n",
            "free_sulfur_dioxide     0.010507\n",
            "total_sulfur_dioxide   -0.183356\n",
            "density                -0.337805\n",
            "pH                      0.123829\n",
            "sulphates               0.053200\n",
            "alcohol                 0.462869\n",
            "Name: quality, dtype: float64\n"
          ]
        }
      ],
      "source": [
        "#Testing and Predicting for White Wine using Linear Regression\n",
        "correlations = df_white.corr()['quality'].drop('quality')\n",
        "print(correlations)\n"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "def get_features(correlation_threshold):\n",
        "    max_corrs = correlations.abs()\n",
        "    high_correaltions = max_corrs\n",
        "    high_correaltions =  max_corrs[max_corrs > correlation_threshold].index.values.tolist()\n",
        "\n",
        "    return high_correaltions"
      ],
      "metadata": {
        "id": "YS9C-qzQJAYX"
      },
      "execution_count": 57,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "features = get_features(0.1)\n",
        "print(features)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "oYsrLaynJJhN",
        "outputId": "9e6e15e5-c1ea-4cd2-b234-5a76e50496c8"
      },
      "execution_count": 58,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "['fixed_acidity', 'volatile_acidity', 'residual_sugar', 'chlorides', 'total_sulfur_dioxide', 'density', 'pH', 'alcohol']\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Splitting Train and Test sets\n",
        "X = df_white[features]\n",
        "y = df_white['quality'] "
      ],
      "metadata": {
        "id": "KI43uEBaJO9M"
      },
      "execution_count": 59,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "X.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "Bqf814ZhJX8R",
        "outputId": "076b1695-be71-4b7f-95e3-e71b4b73ea30"
      },
      "execution_count": 60,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   fixed_acidity  volatile_acidity  residual_sugar  chlorides  \\\n",
              "0            7.0              0.27            20.7      0.045   \n",
              "1            6.3              0.30             1.6      0.049   \n",
              "2            8.1              0.28             6.9      0.050   \n",
              "3            7.2              0.23             8.5      0.058   \n",
              "6            6.2              0.32             7.0      0.045   \n",
              "\n",
              "   total_sulfur_dioxide  density    pH  alcohol  \n",
              "0                 170.0   1.0010  3.00      8.8  \n",
              "1                 132.0   0.9940  3.30      9.5  \n",
              "2                  97.0   0.9951  3.26     10.1  \n",
              "3                 186.0   0.9956  3.19      9.9  \n",
              "6                 136.0   0.9949  3.18      9.6  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-dc09d0a5-9041-4ab3-8500-f256fa65e8e4\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>fixed_acidity</th>\n",
              "      <th>volatile_acidity</th>\n",
              "      <th>residual_sugar</th>\n",
              "      <th>chlorides</th>\n",
              "      <th>total_sulfur_dioxide</th>\n",
              "      <th>density</th>\n",
              "      <th>pH</th>\n",
              "      <th>alcohol</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>7.0</td>\n",
              "      <td>0.27</td>\n",
              "      <td>20.7</td>\n",
              "      <td>0.045</td>\n",
              "      <td>170.0</td>\n",
              "      <td>1.0010</td>\n",
              "      <td>3.00</td>\n",
              "      <td>8.8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>6.3</td>\n",
              "      <td>0.30</td>\n",
              "      <td>1.6</td>\n",
              "      <td>0.049</td>\n",
              "      <td>132.0</td>\n",
              "      <td>0.9940</td>\n",
              "      <td>3.30</td>\n",
              "      <td>9.5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>8.1</td>\n",
              "      <td>0.28</td>\n",
              "      <td>6.9</td>\n",
              "      <td>0.050</td>\n",
              "      <td>97.0</td>\n",
              "      <td>0.9951</td>\n",
              "      <td>3.26</td>\n",
              "      <td>10.1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>7.2</td>\n",
              "      <td>0.23</td>\n",
              "      <td>8.5</td>\n",
              "      <td>0.058</td>\n",
              "      <td>186.0</td>\n",
              "      <td>0.9956</td>\n",
              "      <td>3.19</td>\n",
              "      <td>9.9</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>6.2</td>\n",
              "      <td>0.32</td>\n",
              "      <td>7.0</td>\n",
              "      <td>0.045</td>\n",
              "      <td>136.0</td>\n",
              "      <td>0.9949</td>\n",
              "      <td>3.18</td>\n",
              "      <td>9.6</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-dc09d0a5-9041-4ab3-8500-f256fa65e8e4')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-dc09d0a5-9041-4ab3-8500-f256fa65e8e4 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-dc09d0a5-9041-4ab3-8500-f256fa65e8e4');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 60
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "y.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "9PMSAV0rJvHj",
        "outputId": "e6e162ed-7412-4344-c279-bb671bd8cb58"
      },
      "execution_count": 61,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0    6\n",
              "1    6\n",
              "2    6\n",
              "3    6\n",
              "6    6\n",
              "Name: quality, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 61
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3,random_state=0)"
      ],
      "metadata": {
        "id": "ZrtryyZtJ3Os"
      },
      "execution_count": 62,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "lr = LinearRegression()\n",
        "lr.fit(X_train, y_train)\n",
        "\n",
        "print(lr.coef_)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "A2BV1kfPJ5RX",
        "outputId": "edca4613-8d3e-43cf-c0a5-0582e88b55b2"
      },
      "execution_count": 63,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[ 7.21133619e-02 -1.93384804e+00  7.85697468e-02  1.48407657e-01\n",
            "  1.25787728e-03 -1.66957165e+02  9.17061053e-01  1.97471543e-01]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "train_pred = lr.predict(X_train)\n",
        "print(train_pred)\n",
        "test_pred = lr.predict(X_test)\n",
        "print(test_pred)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "LBwm9ib-J9XJ",
        "outputId": "4cefa422-477c-42cc-b29b-4672ca766fde"
      },
      "execution_count": 64,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[6.24425858 6.41889628 5.24690463 ... 6.08768498 5.82074287 5.82900701]\n",
            "[5.83535309 4.00013819 5.95389692 ... 6.09721449 5.53115285 5.71596334]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "rmse_train = metrics.mean_squared_error(train_pred, y_train) ** 0.5\n",
        "print(rmse_train)\n",
        "\n",
        "rmse_test = metrics.mean_squared_error(test_pred, y_test) ** 0.5\n",
        "print(rmse_test)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "dx7GgSpSKCzv",
        "outputId": "ac7352f6-8375-42c3-a842-16e717425cc1"
      },
      "execution_count": 65,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "0.7503636087885407\n",
            "0.7574416249139597\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "predicted_data = np.round_(test_pred)\n",
        "print(predicted_data)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "CnBrmfrkKKN-",
        "outputId": "491362db-d773-4389-9fcc-63a8ee75ae7d"
      },
      "execution_count": 66,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[6. 4. 6. ... 6. 6. 6.]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print('Mean Absolute Error:', metrics.mean_absolute_error(test_pred, y_test))\n",
        "print('Mean Squared Error:', metrics.mean_squared_error(test_pred, y_test))\n",
        "print('Root Mean Squared Error:', np.sqrt(metrics.mean_squared_error(test_pred, y_test)))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "V4qFSjePKT5P",
        "outputId": "4a311ee1-3759-4e64-979a-06fcb16f01bc"
      },
      "execution_count": 67,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Mean Absolute Error: 0.5832874631432879\n",
            "Mean Squared Error: 0.5737178151522997\n",
            "Root Mean Squared Error: 0.7574416249139597\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "coefficients = pd.DataFrame(lr.coef_, features) \n",
        "coefficients.columns = ['Coefficient']\n",
        "print(coefficients)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "K_b6_Z0cKZhA",
        "outputId": "7a509053-d5c0-4b0f-925a-740140bd880a"
      },
      "execution_count": 68,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                      Coefficient\n",
            "fixed_acidity            0.072113\n",
            "volatile_acidity        -1.933848\n",
            "residual_sugar           0.078570\n",
            "chlorides                0.148408\n",
            "total_sulfur_dioxide     0.001258\n",
            "density               -166.957165\n",
            "pH                       0.917061\n",
            "alcohol                  0.197472\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "baP8TcIRK5Mw"
      },
      "source": [
        "**CONCLUSION:** The above coefficients denote the impact of each on the Quality of Wine.\n",
        "Given Below:-\n",
        "\n",
        "1. Alcohol measure increase will lead to increase of 0.19 in Quality.\n",
        "2. Increase in Chlorides will increase the quality of Wine by 0.14.\n",
        "3. Sulphate measure increase will lead to increase of 0.001 in Quality.\n",
        "4. Fixed_Acidity measure increase will lead to increase of 0.07 in Quality.\n",
        "5. Increase in density will decrease the quality of Wine.\n",
        "6. Increase in Sulphur Dioxide will increase the quality of Wine by 0.001.\n",
        "7. Increase in Residual Sugar will increase the quality of Wine by 0.07.\n",
        "8. Increase in Volatile Acidity will decrease the quality of Wine."
      ]
    }
  ],
  "metadata": {
    "kernelspec": {
      "display_name": "Python 3",
      "language": "python",
      "name": "python3"
    },
    "language_info": {
      "codemirror_mode": {
        "name": "ipython",
        "version": 3
      },
      "file_extension": ".py",
      "mimetype": "text/x-python",
      "name": "python",
      "nbconvert_exporter": "python",
      "pygments_lexer": "ipython3",
      "version": "3.7.7"
    },
    "colab": {
      "provenance": []
    }
  },
  "nbformat": 4,
  "nbformat_minor": 0
}